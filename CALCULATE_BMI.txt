require 'json'

s= '[{
 "codes" : { "LOINC" : [ "225" ] },
 "value" : { "scalar" : "68", "units" : null },
 "time" : 1318651200,
 "status" : "completed",
 "description" : "HEIGHT" 
},
{
 "codes" : { "LOINC" : [ "225" ] },
 "value" : { "scalar" : "69", "units" : null },
 "time" : 1319651400,
 "status" : "completed",
 "description" : "HEIGHT" 
},
{
 "codes" : { "LOINC" : [ "325" ] },
 "value" : { "scalar" : "130", "units" : null },
 "time" : 1319651500,
 "status" : "completed",
 "description" : "WEIGHT" 
},
{
 "codes" : { "LOINC" : [ "325" ] },
 "value" : { "scalar" : "150", "units" : null },
 "time" : 1318651200,
 "status" : "completed",
 "description" : "WEIGHT" 
}]'

v = JSON.parse(s)

def calcBMI(vitals) 
  begin

    height_code = "225"
    weight_code = "325"

    by_date = {}
    vitals.each do |vital|
      original_time = vital['time'] || vital['start_time'] || vital['end_time']
      time = start_of_day(original_time)
    
      by_date[time] ||= {}
      
      codes = vital['codes']['LOINC']
      [height_code, weight_code].each do |code|
        if (codes.include? code) 
          by_date[time][code] = {value: vital['value']['scalar'], unit: vital['value']['unit'], time: original_time}
        end
      end
      
    end
  
    by_date.each do |date, value|
      if (value[height_code] && value[weight_code])
        height = value[height_code][:value].to_f
        weight = value[weight_code][:value].to_f
      
        bmi = (weight / (height*height) ) * 703
        binding.pry
        entry = { "codes" => { "LOINC" => [ "39156-5" ], "SNOMED-CT" => [ "60621009" ] },
         "value" => { "scalar" => "", "units" => nil },
         "time" => nil, "status" => "completed", "description" => "BMI" 
        }
        
        entry['value']['scalar'] = bmi.to_s
        entry['time']=value[weight_code][:time]
        vitals << entry
      end
    end

  rescue
    puts "error calculating bmi"
  end

end

def start_of_day(time) 
  time = Time.at(time)
  Time.gm(time.year, time.month, time.day).to_i
end

